cabal-version: 3.0

name: coalmine
version: 0.1
synopsis: My evolving toolkit that I come to projects with
description:
  Collection of unpolished utils for application development.
homepage: https://github.com/nikita-volkov/coalmine
bug-reports: https://github.com/nikita-volkov/coalmine/issues
author: Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer: Nikita Volkov <nikita.y.volkov@mail.ru>
copyright: (c) 2019 Nikita Volkov
license: MIT
license-file: LICENSE
build-type: Custom
extra-source-files:
  Setup.hs

source-repository head
  type: git
  location: git://github.com/nikita-volkov/coalmine.git

custom-setup
  setup-depends:
    Cabal >=1.10 && <3.5,
    base >=4.7 && <5,
    cabal-doctest >=1 && <1.1,
    filepath

library
  hs-source-dirs: library
  default-extensions: BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, DerivingVia, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, InstanceSigs, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, NumericUnderscores, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeApplications, TypeFamilies, TypeOperators
  default-language: Haskell2010
  exposed-modules:
    Coalmine.Applicative
    Coalmine.Building
    Coalmine.ByteArrayArray
    Coalmine.ByteArrayArray.Ends
    Coalmine.CharPredicates
    Coalmine.Domain
    Coalmine.Formatting
    Coalmine.Formatting.Rendering
    Coalmine.Fx
    Coalmine.Fx.FilePath
    Coalmine.HashSet
    Coalmine.HCurrying
    Coalmine.Isomorphisms
    Coalmine.JsonEncoder
    Coalmine.List
    Coalmine.Megaparsec
    Coalmine.MultilineParser
    Coalmine.MultilineTextBuilder
    Coalmine.Name
    Coalmine.Optics
    Coalmine.Parsing
    Coalmine.Prelude
    Coalmine.S3
    Coalmine.SimplePaths
    Coalmine.SimplePaths.AttoparsecHelpers
    Coalmine.Streamer
    Coalmine.TH
    Coalmine.ToTextBuilder
    Coalmine.Types
    Coalmine.VectorExtras.Generic
    Coalmine.VectorExtras.Generic.Mutable
    Coalmine.Yaml
  other-modules:
    Coalmine.InternalPrelude
    Coalmine.Name.Attoparsec
    Coalmine.Name.Megaparsec
  build-depends:
    acc,
    aeson,
    aeson-value-parser,
    attoparsec,
    attoparsec-data,
    data-dword,
    deferred-folds,
    deque,
    directory,
    domain,
    domain-optics,
    filepath,
    from-sum,
    fx,
    jsonifier,
    machines,
    megaparsec,
    moore-machines,
    neat-interpolation,
    network-ip,
    optics,
    optics-core,
    primitive,
    rerebase,
    template-haskell,
    temporary,
    text-builder,
    text-conversions,
    tostring,
    tuple,
    turtle,
    vector-builder,
    vector-th-unbox,
    yaml,

test-suite doctest
  type: exitcode-stdio-1.0
  hs-source-dirs: doctest
  default-extensions: BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, DerivingVia, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, InstanceSigs, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, NumericUnderscores, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeApplications, TypeFamilies, TypeOperators
  default-language: Haskell2010
  main-is:
    Main.hs
  other-modules:
    Build_doctests
  build-depends:
    doctest,
    rerebase
